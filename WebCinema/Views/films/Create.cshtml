@model ModelCinema.Models.film

@{
    ViewBag.Title = "Create Films";
}

    <h2>Films Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @*<h4>film</h4>*@
    @if (TempData.ContainsKey("Alert"))
    {
        <div class="alert alert-danger" role="alert">@TempData["Alert"]</div>
    }
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <table class="table">
        <tr>
            <th>
                @Html.LabelFor(model => model.titre, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
            <th>
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
        </tr>
        <tr>
            <td>
                @Html.EditorFor(model => model.titre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.titre, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </td>
        </tr>
    </table>

    <table class="table">
        <tr>
            <th>
                @Html.LabelFor(model => model.annee_parution, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
            <th>
                @Html.LabelFor(model => model.duree, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
            <th>
                @Html.LabelFor(model => model.rating, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
            <th>
                @Html.LabelFor(model => model.revenu, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
        </tr>
        <tr>
            <td>
                @Html.EditorFor(model => model.annee_parution, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.annee_parution, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(model => model.duree, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.duree, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(model => model.rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rating, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(model => model.revenu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.revenu, "", new { @class = "text-danger" })
            </td>
        </tr>
    </table>
    <table class="table">
        <tr>
            <th>
                @Html.LabelFor(model => model.ranking, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
            <th>
                @Html.LabelFor(model => model.metascore, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
            <th>
                @Html.LabelFor(model => model.votes, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
        </tr>
        <tr>
            <td>
                @Html.EditorFor(model => model.ranking, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ranking, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(model => model.metascore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.metascore, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(model => model.votes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.votes, "", new { @class = "text-danger" })
            </td>
        </tr>
    </table>
    @Html.HiddenFor(model => model.ranking, new { @Value = 0 })
    @Html.HiddenFor(model => model.metascore)
    @Html.HiddenFor(model => model.votes)
    <hr />

    @*
        <table class="table">
            <tr>
                <th>
                    @Html.LabelFor(model => model.Participations, htmlAttributes: new { @class = "control-label col-md-2" })
                </th>
                <th>
                    Role
                </th>
                <th>
                    @Html.ActionLink("Add Participation", "Index", "participations")
                </th>
            </tr>
            @foreach (var modelItem in Model.Participations)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.Participation)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.role_participant)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.id })
                    </td>
                </tr>

            }
        </table>
    *@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
