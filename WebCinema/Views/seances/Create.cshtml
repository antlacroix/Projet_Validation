@model ModelCinema.Models.seance

@{
    ViewBag.Title = "Create Seances";
}


    <div style="height: 60px">
        <div style="text-align: left; float: left;">
            <h2 class="d-inline">Seances Create</h2>
        </div>
        <div style="text-align: right; float: right; margin-top: 15px; ">
            @Html.ActionLink("Back to List", "BackToSalle", new { id = int.Parse(Session[SessionKeys.salleId].ToString()) }, new { @class = "btn btn-default" })
        </div>
    </div>

@if (TempData.ContainsKey("Alert"))
{
    <div class="alert alert-danger" role="alert">@TempData["Alert"]</div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    <div class="Box">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.date_debut, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight: bolder; color: black;" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.date_debut, new { type = "datetime-local", @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.date_debut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date_fin, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight: bolder; color: black;" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.date_fin, new { type = "datetime-local", @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.date_fin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.titre_seance, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight: bolder; color: black;" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.titre_seance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.titre_seance, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    @Html.HiddenFor(model => model.salle_id, new { @Value = int.Parse(Session[SessionKeys.salleId].ToString()) })

    <div class="form-actions no-color">
        <input type="submit" value="Create" class="btn btn-default" />
    </div>

</div>
}


   

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
