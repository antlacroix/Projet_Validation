@model ModelCinema.Models.seance

@{
    ViewBag.Title = "Edit Seances";
}



<div>
    <h2>Seances Edit</h2>

    @if (TempData.ContainsKey("Alert"))
    {
        <div class="alert alert-danger" role="alert">@TempData["Alert"]</div>
    }
</div>
<br />
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@using (Html.BeginForm("Edit", "seances", FormMethod.Post))
{

    @Html.AntiForgeryToken()
    //table pour afficher les info de la seance
    <table class="table">
        @Html.HiddenFor(model => model.id)
        <tr>
            <td>
                @Html.LabelFor(model => model.date_debut)
            </td>
            <td>
                @Html.LabelFor(model => model.date_fin)
            </td>
            <td>
                @Html.LabelFor(model => model.titre_seance)
            </td>
            <td>
                @Html.LabelFor(model => model.salle_id, "Salle")
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(Model.date_debut.ToString())
                @Html.TextBoxFor(model => model.date_debut, new { type = "datetime-local", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.date_debut, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.Label(Model.date_debut.ToString())
                @Html.TextBoxFor(model => model.date_fin, new { type = "datetime-local", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.date_fin, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(model => model.titre_seance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.titre_seance, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.DropDownList("salle_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.salle_id, "", new { @class = "text-danger" })
            </td>
        </tr>
    </table>

    <input type="submit" value="Save" class="btn btn-default btn-success" />

}
 </br>
@using (Html.BeginForm("Reccurance", "seances", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    //table pour la recurance
    <table class="table">
        @Html.HiddenFor(model => model.id)
        <tr>
            <th>
                <select class="form-control" id="recurrance" name="recurrance">
                    <option>Daily</option>
                    <option>Weekly</option>
                    <option>Monthly</option>
                    <option>Yearly</option>
                </select>
            </th>
            <th>
                <input class="form-control" id="nbrRecurrance" name="nbrRecurrance" type="number" min="1" value="1" />
            </th>
            <th>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create Repeat" class="btn btn-default btn-primary" />
                    </div>
                </div>
            </th>
        </tr>
    </table>
}

@using (Html.BeginForm("Edit", "seances", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    //table pour afficher la liste des programmation de la seance
    <table class="table">
        <tr>
            <th>
                Films
            </th>
            <th>
                Types
            </th>
            <th>
                Durees
            </th>
            <th>
                Primaire
            </th>
            <th>

            </th>
        </tr>

        @foreach (var item in Model.programmations)
        {
            <tr>
                @Html.HiddenFor(modelItem => item.id)
                <td>
                    @Html.DisplayFor(modelItem => item.film.titre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.film.type_film.typage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.film.duree)
                </td>
                <td>
                    @if (item.is_primary)
                    {
                        <b>PRIMARY</b>
                    }
                    else if (item.film.type_film.typage != "Promotionnel")
                    {
                        @Html.ActionLink("make primary", "MakePrimary", new { id = item.id, seanceId = int.Parse(Session[SessionKeys.seanceId].ToString()) }, htmlAttributes: new { @class = "btn btn-primary" })
                    }
                </td>
                <td>
                    @Html.ActionLink("Remove", "RemoveProgrammation", new { id = item.id, seanceId = int.Parse(Session[SessionKeys.seanceId].ToString()) }, htmlAttributes: new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </table>
}



@using (Html.BeginForm("Edit", "seances", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    //table pour le filtre
    <table class="table">
        <tr>
            <th>
                Titre
            </th>
            <th>
                Type
            </th>
            <th>
                Annee de parution
            </th>
        </tr>
        @using (Html.BeginForm("Filtre", "seances", FormMethod.Post))
        {
            <tr>
                <th>
                    @Html.TextBox("titre", "", new { @class = "form-control" })
                </th>
                <th>
                    @Html.DropDownList("id_type", null, htmlAttributes: new { @class = "form-control" })
                </th>
                <th>
                    @Html.TextBox("yearMin", DateTime.Now.Year - 10, new { @class = "form-control datepicker" })
                </th>
                <th>
                    @Html.TextBox("yearMax", DateTime.Now.Year + 5, new { @class = "form-control datepicker" })
                </th>
                <th>
                    <p>
                        <input name="command" type="submit" value="Filtre" class="btn btn-default" />
                    </p>
                </th>
            </tr>
        }
    </table>
}

@using (Html.BeginForm("Edit", "seances", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    //table pour ajouter une nouvelle seance
    <table class="table">
        <tr>
            <th>
                Films
            </th>
            <th>
                Types
            </th>
            <th>
                Durees
            </th>
            <th>

            </th>
        </tr>
        @if (ViewBag.filmsFiltred != null)
        {
            foreach (var item in ViewBag.filmsFiltred)
            {
                Html.RenderPartial("FilmsAdder", (ModelCinema.Models.film)item);
            }
        }
    </table>
}

<div>
    @Html.ActionLink("Back to List", "BackToSalle", new { id = int.Parse(Session[SessionKeys.salleId].ToString()) }, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
