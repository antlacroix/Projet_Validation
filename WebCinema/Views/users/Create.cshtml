@model ModelCinema.Models.user

@{
    ViewBag.Title = "Create User";
}

    <h2>User Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>user</h4>
    @if (TempData.ContainsKey("Alert"))
    {
        <div class="alert alert-danger" role="alert">@TempData["Alert"]</div>
    }
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.login, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.login, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.login, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.contact_info_id, "contact_info_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("contact_info_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.contact_info_id, "", new { @class = "text-danger" })
        </div>
        @Html.ActionLink("New Contact info", "Index", "contact_info")
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.user_status_id, "user_status_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("user_status_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.user_status_id, "", new { @class = "text-danger" })
        </div>
        @Html.ActionLink("New User status", "Index", "user_status")
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.user_type_id, "user_type_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("user_type_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.user_type_id, "", new { @class = "text-danger" })
        </div>
        @Html.ActionLink("New User Type", "Index", "user_type")
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
