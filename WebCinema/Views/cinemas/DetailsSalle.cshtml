@model ModelCinema.Models.salle

@{
    ViewBag.Title = "DetailsSalle";
    DateTime?
        startDate = (Session[SessionKeys.startDate] != null) ?
            Session[SessionKeys.startDate] as DateTime? :
            DateTime.Now;
    DateTime?
        endDate = (Session[SessionKeys.endDate] != null) ?
            Session[SessionKeys.endDate] as DateTime? :
            DateTime.Now.AddDays(+10);
}

<div style="height: 60px">
    <div style="text-align: left; float: left;">
        <h2 class="d-inline">Room Details</h2>
    </div>
    <div style="text-align: right; float: right; margin-top: 15px; ">
        @Html.ActionLink("Back to " + Model.cinema.cinema_name, "Details", new { id = Model.cinema_id }, new { @class = "btn btn-default" })
    </div>
</div>

@if (TempData.ContainsKey("Alert"))
{
    <div class="alert alert-danger alert-dismissable show" role="alert">
        @TempData["Alert"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="transbox">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.nbr_place)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.numero_salle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.commentaire)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.salle_status.status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.cinema.cinema_name)
            </th>
        </tr>
        <tr>
            <td>
                @Html.DisplayFor(model => model.nbr_place)
            </td>
            <td>
                @Html.DisplayFor(model => model.numero_salle)
            </td>
            <td>
                @Html.DisplayFor(model => model.commentaire)
            </td>
            <td>
                @Html.DisplayFor(model => model.salle_status.status)
            </td>
            <td>
                @Html.DisplayFor(model => model.cinema.cinema_name)
            </td>
        </tr>

    </table>

    <table class="table">


        @using (Html.BeginForm("Filtre", "cinemas", FormMethod.Post))
        {
            <tr>
                <th>

                </th>
                <th>
                    Start
                    <input class="form-control" data-val="true" data-val-required="Date is required"
                           id="startDate" name="startDate" type="date" value=@startDate />
                </th>
                <th>
                    End
                    <input class="form-control" data-val="true" data-val-required="Date is required"
                           id="endDate" name="endDate" type="date" value=@endDate />
                </th>
                <th>
                    <br />
                    <input type="submit" style="background: url('../../Image/search.png'); display: block; height: 24px; width: 24px;" class="text-hide" />

                </th>
            </tr>
        }

        <tr>
            <th>
                Session Tilte
            </th>
            <th>
                Start Date
            </th>
            <th>
                End Date
            </th>
            <th>
                <u> @Html.ActionLink("Create Session", "CreateSeance")</u>
            </th>
        </tr>

        @foreach (var item in Model.seances.OrderBy(x => x.date_debut))
        {
            <tr style="
                @(item.date_fin < DateTime.Now? "background-color: rgb(143, 21, 0, 0.5);" : "")
                @((item.date_debut < DateTime.Now && item.date_fin > DateTime.Now)? "background-color: rgb(218, 104, 15, 0.5);" : "")">
                <td>
                    @Html.DisplayFor(modelItem => item.titre_seance)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.date_debut)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.date_fin)
                </td>
                <td>
                    <table class="sub-table">
                        <tr>
                            <td class="sub-table">
                                @if (item.date_debut > DateTime.Now.AddHours(2))
                                {
                                    @Html.ActionLink("Edit", "EditSeance", new { id = item.id }, htmlAttributes: new
                                    {
                                   style = "background: url('../../Image/edit.png'); display:block; background-size: 36px 36px; height:36px; width:36px;",
                                   @class = "text-hide"
                               })
                                }
                                else
                                {
                                    <div class="btn-general">

                                    </div>
                                }
                            </td>
                            <td class="sub-table">
                                @if (item.date_debut < DateTime.Now && item.date_fin > DateTime.Now)
                                {
                                    <div class="btn-general"></div>
                                }
                                else
                                {
                                    <input id="@item.id" onclick="Delete(@item.id)"
                                           class="text-hide btn-general btn-Delete" type="button" value="" />
                                }
                            </td>
                            <td>
                                <input id="btnShowRepeat" onclick="ShowRepeatModal(@item.id)"
                                       class="btn btn-Repeat btn-general" type="button" value="" />
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        }
    </table>

</div>

<div class="modal" id="myModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title"></h2>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<button onclick="topFunction()" id="myBtn" title="Go to top">Back to Top</button>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
        var mybutton = document.getElementById("myBtn");

        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                mybutton.style.display = "block";
            } else {
                mybutton.style.display = "none";
            }
        }

        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }

        $(document).ready(function () {
            var testVar = "@Session[SessionKeys.seanceTab]"
            switch (testVar) {
                case "Delete":
                    Delete("@Session[SessionKeys.seanceId]");
                    break;
                default:
                    break;
            }

            $('body').on("change", "#recurrance", function (evt) {
                switch ($(this).val()) {
                    case "Daily":
                        $('#weeklyOption').hide();
                        break;
                    case "Weekly":
                        $('#weeklyOption').show();
                        break;
                    case "Monthly":
                        $('#weeklyOption').hide();
                        break;
                    case "Yearly":
                        $('#weeklyOption').hide();
                        break;
                    default:
                        break;

                }
            })
        })

        function Delete(id) {
            $('.modal-title').html("Are you sure you want to delete this session?");
            $.get("@Url.Action("Delete", "seances")/" + id,
                function (data) { $('.modal-body').html(data); })
            $('#myModal').modal('show');

            $('#myModal').on('hidden.bs.modal', function (e) {
                $('.modal-body').html("");
                $('.modal-title').html("");
            })
        }

        function ShowRepeatModal(id) {
            $('.modal-title').html("Repeat Session");
            $.get("@Url.Action("getRepeat","seances")/" + id,
                function (data) { $('.modal-body').html(data); })
            $('#myModal').modal('show');

            $('#myModal').on('hidden.bs.modal', function (e) {
                $('.modal-body').html("");
                $('.modal-title').html("");
            })
        }

        function Change() {
            var select = $('#recurrance');
            alert(select.val);
        }
</script>

}