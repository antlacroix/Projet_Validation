@model ModelCinema.Models.cinema

@{
    ViewBag.Title = "Edit Cinema";
}

<h2>Cinema Edit</h2>


@using (Html.BeginForm("Edit", "cinemas", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="transbox">


        <div class="form-horizontal">
            @*<h4>cinema</h4>*@
            @if (TempData.ContainsKey("Alert"))
            {
                <div class="alert alert-danger" role="alert">@TempData["Alert"]</div>
            }
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

        <table>
            <div class="form-group">
                @Html.LabelFor(model => model.contact_info_id, "Address", htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight: bolder; color: black;" })
                <div class="col-md-10">
                    @Html.DropDownList("contact_info_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.contact_info_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.responsable_user_id, "Responsable", htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight: bolder; color: black;" })
                <div class="col-md-10">
                    @Html.DropDownList("responsable_user_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.responsable_user_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cinema_name, "Nom", htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight: bolder; color: black;" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cinema_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cinema_name, "", new { @class = "text-danger" })
                </div>
            </div>

          

            <div class="form-actions no-color">
                <input type="submit" value="Update" class="btn btn-default btn-success" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
            </div>


</div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
